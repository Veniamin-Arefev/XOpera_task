- hosts: localhost
  gather_facts: false
  become: true
  vars:
    pool_dir: "/var/lib/libvirt/images"
    vm_name: "my_vm"
    vm_ssh_key: ""
    base_image_url: "images/jammy-server-cloudimg-amd64.img"
  tasks:
    - name: Create VM image from base
      copy:
        src: "{{ base_image_url }}"
        dest: "{{ pool_dir }}/{{ vm_name }}.img"
#      when: os == "ubuntu22"
      register: copy_results
#    - name: Create VM image from base
#      copy:
#        dest: "images/focal-server-cloudimg-amd64.img"
#        src: "{{ pool_dir }}/{{ base_image_name }}"
#      when: os == "ubuntu20"
#      register: copy_results
#    - name: Create VM image from base
#      copy:
#        dest: "images/bionic-server-cloudimg-amd64.img"
#        src: "{{ pool_dir }}/{{ base_image_name }}"
#      when: os == "ubuntu18"
#      register: copy_results

    - name: Create user data from template
      template:
        src: user-data-template.yaml.j2
        dest: "{{ pool_dir }}/{{ vm_name }}-user-data.yaml"
        mode: 0644

    - name: Resize the image
      command: |
        qemu-img resize "{{ pool_dir }}/{{ vm_name }}.img" "{{ vm_image_size }}"

    - name: Create cloud init disk
      command: |
        cloud-localds -v "{{ pool_dir }}/{{ vm_name }}_clcnf.img" "{{ pool_dir }}/{{ vm_name }}-user-data.yaml"

    - name: Create the VM
      command: |
        virt-install \
        --name "{{ vm_name }}" \
        --memory  "{{ vm_ram_mb }}" \
        --vcpus "{{ vm_vcpus }}" \
        --disk "{{ pool_dir }}/{{ vm_name }}.img",device=disk,bus=virtio \
        --disk "{{ pool_dir }}/{{ vm_name }}_clcnf.img",device=cdrom \
        --boot hd \
        --os-variant ubuntu20.04 \
        --virt-type kvm \
        --graphics none \
        --noautoconsole
